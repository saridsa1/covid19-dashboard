{
  
    
        "post0": {
            "title": "World News from data (good & bad)",
            "content": ". Warning: This dashboard was not built by an epidemiologist. . Based on data up to: 2020-06-28. Compared to (10 days before): 2020-06-18 . Transmission rate: . . Note: &quot;transmission rate&quot; here is a measure of speed of spread of infection, and means how much of the susceptible population each infected person is infecting per day (if everyone is susceptible). E.g. 10% means that 100 infected patients will infect 10 new people per day. Related to R0. See Methodology for details of calculation. . &#11093; Bad news: new waves &#127477;&#127486; &#127469;&#127479; &#127463;&#127467; &#127480;&#127472; &#127473;&#127482; &#127464;&#127487; &#127474;&#127462; &#127464;&#127469; &#127479;&#127480; &#127464;&#127479; &#127462;&#127482; &#127465;&#127487; &#127474;&#127468; &#127473;&#127463; &#127462;&#127481; &#127471;&#127477; &#127471;&#127476; . Large increase in transmission rate vs. 10 days ago, that might mean a relapse, new wave, worsening outbreak. . Countries are sorted by size of change in transmission rate. | Includes only countries that were previously active (more than 100 estimated new cases). | &quot;Large increase&quot; = at least +2% change. | . Current:Estimateddailytransmissionrate 10 days ago:Estimateddailytransmissionrate Estimated recent cases in last 5 days EstimatedcurrentICU needper 100kpopulation Estimated totalaffectedpopulationpercentage . &#127477;&#127486; Paraguay 18.3% | 3.5% | 1,538 | 0.29 | 0.1% | . &#127469;&#127479; Croatia 15.5% | 5.7% | 1,136 | 0.62 | 0.3% | . &#127463;&#127467; Burkina Faso 11.2% | 2.0% | 1,194 | 0.00 | 0.1% | . &#127480;&#127472; Slovakia 10.7% | 4.5% | 107 | 0.11 | 0.1% | . &#127473;&#127482; Luxembourg 10.1% | 4.3% | 297 | 1.38 | 2.0% | . &#127464;&#127487; Czechia 10.0% | 4.6% | 2,407 | 0.90 | 0.3% | . &#127474;&#127462; Morocco 9.5% | 4.6% | 4,947 | 0.22 | 0.1% | . &#127464;&#127469; Switzerland 7.3% | 3.0% | 1,287 | 0.44 | 2.0% | . &#127479;&#127480; Serbia 8.6% | 4.6% | 1,612 | 1.15 | 0.3% | . &#127464;&#127479; Costa Rica 10.5% | 7.0% | 662 | 0.94 | 0.1% | . &#127462;&#127482; Australia 9.4% | 5.9% | 296 | 0.08 | 0.0% | . &#127465;&#127487; Algeria 7.5% | 4.2% | 16,767 | 0.15 | 0.5% | . &#127474;&#127468; Madagascar 7.5% | 4.7% | 1,406 | 0.04 | 0.0% | . &#127473;&#127463; Lebanon 5.7% | 3.1% | 406 | 0.13 | 0.1% | . &#127462;&#127481; Austria 5.9% | 3.8% | 689 | 0.45 | 0.7% | . &#127471;&#127477; Japan 6.6% | 4.5% | 1,338 | 0.08 | 0.0% | . &#127471;&#127476; Jordan 5.5% | 3.4% | 150 | 0.03 | 0.0% | . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . &#128994; Good news: slowing waves &#127464;&#127473; &#127468;&#127462; &#127464;&#127475; &#127464;&#127470; &#127475;&#127466; &#127477;&#127472; &#127480;&#127465; &#127475;&#127477; &#127464;&#127467; &#127474;&#127479; &#127462;&#127473; &#127462;&#127467; &#127468;&#127479; &#127480;&#127462; . Large decrease in transmission rate vs. 10 days ago, that might mean a slowing down / effective control measures. . Countries are sorted by size of change in transmission rate. | Includes only countries that were previously active (more than 100 estimated new cases). | &quot;Large decrease&quot; = at least -2% change. | . Current:Estimateddailytransmissionrate 10 days ago:Estimateddailytransmissionrate Estimated recent cases in last 5 days EstimatedcurrentICU needper 100kpopulation Estimated totalaffectedpopulationpercentage . &#127464;&#127473; Chile 3.6% | 11.6% | 51,453 | 20.37 | 4.2% | . &#127468;&#127462; Gabon 3.6% | 10.3% | 828 | 1.02 | 0.8% | . &#127464;&#127475; China 3.9% | 9.9% | 613 | 0.00 | 0.0% | . &#127464;&#127470; Cote d&#39;Ivoire 5.3% | 10.4% | 3,709 | 0.16 | 0.1% | . &#127475;&#127466; Niger 4.1% | 8.3% | 771 | 0.00 | 0.1% | . &#127477;&#127472; Pakistan 3.9% | 7.9% | 95,544 | 0.55 | 0.7% | . &#127480;&#127465; Sudan 2.4% | 6.0% | 8,967 | 0.08 | 0.5% | . &#127475;&#127477; Nepal 7.1% | 10.5% | 2,044 | 0.48 | 0.0% | . &#127464;&#127467; CAR (Africa) 4.6% | 7.9% | 2,471 | 0.31 | 0.5% | . &#127474;&#127479; Mauritania 6.9% | 10.1% | 10,480 | 0.63 | 1.6% | . &#127462;&#127473; Albania 7.4% | 10.3% | 913 | 1.32 | 0.3% | . &#127462;&#127467; Afghanistan 2.8% | 5.4% | 15,725 | 0.23 | 1.0% | . &#127468;&#127479; Greece 4.2% | 6.7% | 284 | 0.18 | 0.1% | . &#127480;&#127462; Saudi Arabia 5.2% | 7.5% | 43,795 | 2.94 | 1.5% | . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . ICU need . &#11093; Bad news: higher ICU need &#127477;&#127462; &#127462;&#127474; &#127463;&#127479; &#127482;&#127480; &#127464;&#127476; &#127476;&#127474; &#127487;&#127462; &#127470;&#127473; &#127462;&#127479; &#127463;&#127476; &#127469;&#127475; &#127463;&#127469; &#127474;&#127472; &#127474;&#127465; &#127473;&#127482; &#127465;&#127476; &#127469;&#127479; &#127463;&#127462; &#127462;&#127487; . Large increases in need for ICU beds per 100k population vs. 10 days ago. . Only countries for which the ICU need increased by more than 0.5 (per 100k). | . Current:EstimatedICU needper 100kpopulation 10 days ago:EstimatedICU needper 100kpopulation Estimatedrecent cases in last 5 days Estimateddailytransmissionrate Estimated totalaffectedpopulationpercentage . &#127477;&#127462; Panama 7.76 | 5.71 | 14,625 | 6.8% | 3.0% | . &#127462;&#127474; Armenia 11.70 | 9.95 | 8,281 | 7.0% | 2.4% | . &#127463;&#127479; Brazil 7.73 | 5.98 | 1,305,228 | 7.1% | 5.5% | . &#127482;&#127480; US 7.53 | 5.79 | 934,008 | 7.0% | 4.4% | . &#127464;&#127476; Colombia 2.51 | 1.45 | 143,985 | 8.5% | 1.5% | . &#127476;&#127474; Oman 4.28 | 3.36 | 9,549 | 6.3% | 1.6% | . &#127487;&#127462; South Africa 2.31 | 1.42 | 168,484 | 8.9% | 1.6% | . &#127470;&#127473; Israel 1.93 | 1.06 | 3,566 | 8.6% | 0.6% | . &#127462;&#127479; Argentina 2.24 | 1.38 | 40,992 | 8.3% | 0.6% | . &#127463;&#127476; Bolivia 2.94 | 2.13 | 33,637 | 6.8% | 2.3% | . &#127469;&#127475; Honduras 1.66 | 0.92 | 36,021 | 9.0% | 2.0% | . &#127463;&#127469; Bahrain 7.36 | 6.70 | 2,789 | 5.3% | 2.0% | . &#127474;&#127472; North Macedonia 4.59 | 3.93 | 4,143 | 6.1% | 2.0% | . &#127474;&#127465; Moldova 4.66 | 4.06 | 5,742 | 5.3% | 2.0% | . &#127473;&#127482; Luxembourg 1.38 | 0.77 | 297 | 10.1% | 2.0% | . &#127465;&#127476; Dominican Republic 2.20 | 1.64 | 14,496 | 6.4% | 1.6% | . &#127469;&#127479; Croatia 0.62 | 0.08 | 1,136 | 15.5% | 0.3% | . &#127463;&#127462; Bosnia 1.53 | 0.99 | 1,351 | 6.1% | 0.6% | . &#127462;&#127487; Azerbaijan 1.71 | 1.20 | 6,543 | 7.1% | 0.5% | . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . &#128994; Good news: lower ICU need &#127464;&#127473; &#127478;&#127462; &#127463;&#127486; &#127480;&#127468; &#127465;&#127471; &#127477;&#127466; &#127468;&#127463; . Large decreases in need for ICU beds per 100k population vs. 10 days ago. . Only countries for which the ICU need decreased by more than 0.5 (per 100k). | . Current:EstimatedICU needper 100kpopulation 10 days ago:EstimatedICU needper 100kpopulation Estimatedrecent cases in last 5 days Estimateddailytransmissionrate Estimated totalaffectedpopulationpercentage . &#127464;&#127473; Chile 20.37 | 22.85 | 51,453 | 3.6% | 4.2% | . &#127478;&#127462; Qatar 9.81 | 11.72 | 3,635 | 3.7% | 3.3% | . &#127463;&#127486; Belarus 5.71 | 7.14 | 1,530 | 2.8% | 0.7% | . &#127480;&#127468; Singapore 3.75 | 5.04 | 836 | 3.1% | 0.7% | . &#127465;&#127471; Djibouti 1.16 | 2.09 | 42 | 0.6% | 1.5% | . &#127477;&#127466; Peru 6.17 | 6.91 | 92,659 | 4.6% | 5.4% | . &#127468;&#127463; United Kingdom 2.08 | 2.64 | 54,783 | 3.3% | 5.9% | . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . New cases and deaths: . &#11093; Bad news: new first significant outbreaks &#127463;&#127471; &#127474;&#127484; &#127477;&#127480; &#127473;&#127486; &#127464;&#127483; . Countries that have started their first significant outbreak (crossed 1000 total reported cases or 20 deaths) vs. 10 days ago. . Current:Estimateddailytransmissionrate 10 days ago:Estimateddailytransmissionrate Estimated recent cases in last 5 days EstimatedcurrentICU needper 100kpopulation Estimated totalaffectedpopulationpercentage . &#127463;&#127471; Benin 9.0% | - | 2,172 | 0.07 | 0.1% | . &#127474;&#127484; Malawi 11.6% | - | 1,864 | 0.03 | 0.1% | . &#127477;&#127480; West Bank and Gaza 15.2% | - | 1,554 | 0.34 | 0.1% | . &#127473;&#127486; Libya 6.2% | - | 930 | 0.10 | 0.1% | . &#127464;&#127483; Cabo Verde 7.1% | - | 584 | 1.57 | 0.8% | . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . &#128994; Good news: no new cases or deaths . New countries with no new cases or deaths vs. 10 days ago. . Only considering countries that had at least 1000 estimated total cases and at least 10 total deaths and had an active outbreak previously. | . Estimatedtotalcases Totalreporteddeaths Dateof lastreported case Dateof lastreported death . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . Mixed news: no new deaths, only new cases &#127468;&#127478; &#127463;&#127467; &#127469;&#127479; &#127480;&#127468; &#127475;&#127466; &#127473;&#127482; &#127481;&#127465; &#127474;&#127486; &#127480;&#127472; &#127481;&#127475; &#127473;&#127472; &#127475;&#127487; &#127466;&#127466; &#127473;&#127483; &#127481;&#127469; . New countries with no new deaths (only new cases) vs. 10 days ago. . Only considering countries that had at least 1000 estimated total cases and at least 10 total deaths and had an active outbreak previously. | . Current:Estimateddailytransmissionrate 10 days ago:Estimateddailytransmissionrate Estimated recent cases in last 5 days EstimatedcurrentICU needper 100kpopulation Estimated totalaffectedpopulationpercentage . &#127468;&#127478; Equatorial Guinea 11.7% | 16.6% | 3,185 | 0.45 | 1.4% | . &#127463;&#127467; Burkina Faso 11.2% | 2.0% | 1,194 | 0.00 | 0.1% | . &#127469;&#127479; Croatia 15.5% | 5.7% | 1,136 | 0.62 | 0.3% | . &#127480;&#127468; Singapore 3.1% | 2.8% | 836 | 3.75 | 0.7% | . &#127475;&#127466; Niger 4.1% | 8.3% | 771 | 0.00 | 0.1% | . &#127473;&#127482; Luxembourg 10.1% | 4.3% | 297 | 1.38 | 2.0% | . &#127481;&#127465; Chad 1.2% | 0.7% | 269 | 0.00 | 0.2% | . &#127474;&#127486; Malaysia 1.5% | 1.7% | 111 | 0.03 | 0.1% | . &#127480;&#127472; Slovakia 10.7% | 4.5% | 107 | 0.11 | 0.1% | . &#127481;&#127475; Tunisia 2.4% | 9.8% | 67 | 0.02 | 0.1% | . &#127473;&#127472; Sri Lanka 2.6% | 2.5% | 36 | 0.04 | 0.0% | . &#127475;&#127487; New Zealand 8.0% | 3.4% | 14 | 0.02 | 0.0% | . &#127466;&#127466; Estonia 1.2% | 0.6% | 11 | 0.28 | 0.4% | . &#127473;&#127483; Latvia 2.0% | 2.9% | 11 | 0.13 | 0.1% | . &#127481;&#127469; Thailand 1.7% | 1.4% | 9 | 0.00 | 0.0% | . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . No news: continously inactive countries &#127481;&#127487; . Countries that had no new cases or deaths 10 days ago or now. . Only considering countries that had at least 1000 estimated total cases and at least 10 total deaths. | Caveat:these countries may have stopped reporting data like Tanzania. | . Estimatedtotalcases Totalreporteddeaths Dateof lastreported case Dateof lastreported death . &#127481;&#127487; Tanzania 10,215 | 21 | 2020-05-08 | 2020-05-08 | . . Tip: Click country name in legend to switch countries. Uze mouse wheel to zoom Y axis. . Deaths burden: . &#11093; Bad news: higher death burden &#127464;&#127476; . Countries with significantly higher recent death burden per 100k population vs. 10 days ago. . &quot;Significantly higher&quot; = 100% more. | Only considering countries that had at least 10 recent deaths in both timeframes, and death burden of at least 0.1 per 100k. | . Current:5 daydeathburdenper 100k 10 days ago:5 daydeathburdenper 100k Newreported deathssince 10days ago EstimatedcurrentICU needper 100kpopulation Estimated totalaffectedpopulationpercentage . &#127464;&#127476; Colombia 1.44 | 0.56 | 1301 | 2.5 | 1.5% | . &#128994; Good news: lower death burden &#127480;&#127466; &#127464;&#127462; &#127467;&#127479; &#127486;&#127466; . Countries with significantly lower recent death burden per 100k population vs. 10 days ago. . &quot;Significantly lower&quot; = 50% less | Only considering countries that had at least 10 recent deaths in both timeframes, and death burden of at least 0.1 per 100k. | . Current:5 daydeathburdenper 100k 10 days ago:5 daydeathburdenper 100k Newreported deathssince 10days ago EstimatedcurrentICU needper 100kpopulation Estimated totalaffectedpopulationpercentage . &#127480;&#127466; Sweden 0.70 | 1.77 | 227 | 9.4 | 4.9% | . &#127464;&#127462; Canada 0.10 | 0.38 | 221 | 1.2 | 2.2% | . &#127467;&#127479; France 0.07 | 0.30 | 175 | 0.7 | 3.8% | . &#127486;&#127466; Yemen 0.09 | 0.28 | 54 | 0.0 | 0.5% | . Appendix: . . Note: For interactive map, per country details, projections, and modeling methodology see Projections of ICU need by Country dashboard . . Warning: the visualisation below contains the results of a predictive model that was not built by an epidemiologist. . Future model projections plots per country . For countries in any of the above groups. . . Tip: Choose country from the drop-down below the graph. . Future World projections (all countries stacked) . The outputs of the models for all countries in stacked plots. . Tip: Hover the mouse of the area to see which country is which and the countries S/I/R ratios at that point. . Tip: The plots are zoomable and draggable. . World total estimated actively infected . World total estimated recovered or dead . Methodology . I&#39;m not an epidemiologist. | Tranmission rates calculation: Case growth rate is calculated over the 5 past days. | Confidence bounds are calculated by from the weighted standard deviation of the growth rate over the last 5 days. Countries with highly noisy transmission rates are exluded from tranmission rate change tables (&quot;new waves&quot;, &quot;slowing waves&quot;). | Tranmission rate is calculated from cases growth rate by estimating the actively infected population change relative to the susceptible population. | . | Recovery rate (for estimating actively infected): Where the rate estimated from Total Outstanding Cases is too high (on down-slopes) recovery probability if 1/20 is used (equivalent 20 days to recover). | . | Total cases are estimated from the reported deaths for each country: Each country has different testing policy and capacity and cases are under-reported in some countries. Using an estimated IFR (fatality rate) we can estimate the number of cases some time ago by using the total deaths until today. We can than use this estimation to estimate the testing bias and multiply the current reported case numbers by that. | IFRs for each country is estimated using the age IFRs from May 1 New York paper and UN demographic data for 2020. These IFRs can be found in df[&#39;age_adjusted_ifr&#39;] column. Some examples: US - 0.98%, UK - 1.1%, Qatar - 0.25%, Italy - 1.4%, Japan - 1.6%. | The average fatality lag is assumed to be 8 days on average for a case to go from being confirmed positive (after incubation + testing lag) to death. This is the same figure used by &quot;Estimating The Infected Population From Deaths&quot;. | Testing bias: the actual lagged fatality rate is than divided by the IFR to estimate the testing bias in a country. The estimated testing bias then multiplies the reported case numbers to estimate the true case numbers (=case numbers if testing coverage was as comprehensive as in the heavily tested countries). | . | ICU need is calculated and age-adjusted as follows: UK ICU ratio was reported as 4.4% of active reported cases. | Using UKs ICU ratio and IFRs corrected for age demographics we can estimate each country&#39;s ICU ratio (the number of cases requiring ICU hospitalisation). For example using the IFR ratio between UK and Qatar to devide UK&#39;s 4.4% we get an ICU ratio of around 1% for Qatar which is also the ratio they report to WHO here. | The ICU need is calculated from reported cases rather than from total estimated active cases. This is because the ICU ratio (4.4%) is based on reported cases. | . | .",
            "url": "https://covid19dashboards.com/covid-news/",
            "relUrl": "/covid-news/",
            "date": " • Jun 12, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Ontario COVID-19 data visualizations of confirmed cases",
            "content": "The graphs are from either Ontario status of confirmed cases data, where the date used is the client&#39;s symptom onset date, or Ontario testing status data, where the date used is the reported date (rep. date). Data based on Symptom Onset Date is lagging and can be updated retroactively. Most of the graphs are interactive. You can toggle off figures by clicking on the item in the legend, or select an area on the graph to zoom in. Hotspots . Ontario-wide . Cases . For the graph above, data for &quot;Total tests completed in the last day&quot; is not available before 15 Apr 2020. The incubation period between SARS-CoV-2 infection to COVID-19 symptom onset is 1 to 14 days, with an average of 5 days. The graph below explores whether there is a relationship between confirmed cases by offset Symptom Onset Date and notable social events. Deaths . Regional by Public Health Unit . Data was last retrieved from Confirmed positive cases of COVID19 in Ontario and Status of COVID-19 cases in Ontario on 2020-06-30 00:29.",
            "url": "https://covid19dashboards.com/ontario-confirmed-cases-per-region/",
            "relUrl": "/ontario-confirmed-cases-per-region/",
            "date": " • Apr 26, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "COVID-19 Status in Morocco",
            "content": "30-06-2020 stats in Morocco: . Confirmed: 12290 . Recovered: 8833 . Deaths: 225 . Regions with most cases . Region Total Cases Confirmed Deaths Recovered . 0 Tetouan-Al Hoceima | 2206 | 1872 | 29 | 305 | . 1 Oriental | 206 | 53 | 8 | 145 | . 2 Fes-Meknes | 1247 | 796 | 26 | 424 | . 3 Rabat-Sale-Kenitra | 1953 | 1520 | 11 | 332 | . 4 Beni Mellal-Khenifra | 152 | 91 | 7 | 54 | . 5 Casablanca-Settat | 3379 | 2476 | 46 | 656 | . 6 Marrakech-Safi | 1925 | 1017 | 50 | 861 | . 7 Draa-Tafilalet | 586 | 117 | 4 | 465 | . 8 Souss-Massa | 92 | 48 | 7 | 37 | . 9 Guelmim-Oued Noun | 75 | 46 | 0 | 29 | . 10 Laayoune-Sakia El Hamra | 457 | 453 | 0 | 4 | . 11 Eddakhla-Oued Eddahab | 11 | 9 | 0 | 2 | . Total Active Cases in regions . Region Active Cases . 0 Tetouan-Al Hoceima | 1872 | . 1 Oriental | 53 | . 2 Fes-Meknes | 796 | . 3 Rabat-Sale-Kenitra | 1520 | . 4 Beni Mellal-Khenifra | 91 | . 5 Casablanca-Settat | 2476 | . 6 Marrakech-Safi | 1017 | . 7 Draa-Tafilalet | 117 | . 8 Souss-Massa | 48 | . 9 Guelmim-Oued Noun | 46 | . 10 Laayoune-Sakia El Hamra | 453 | . 11 Eddakhla-Oued Eddahab | 9 | . Currently Infected .",
            "url": "https://covid19dashboards.com/covid-overview-morocco/",
            "relUrl": "/covid-overview-morocco/",
            "date": " • Apr 12, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Where is the curve flattening?",
            "content": "States/countries will drift off the diagonal when they are flattening the curve. . Tip: To highlight states/countries click (Shift+ for multiple) on the name in the legend. Click outside the legend to highlight all states/countries. . Only entries with at least 100 confirmed cases are considered. . The top 5 entries are initially highlighted. . United States of America . Africa . America . Asia-Pacific . Europe . Explanation . The exponential growth stage of a pandemic must end sometime, either as the virus runs out of people to infect, or as societies get it under control. However, it can be difficult to tell exactly when exponential growth is ending, for several reasons: . Humans aren&#39;t wired to understand exponentials at a glance. | It can be difficult to compare regions with differing first-infection dates, testing rates, and populations. | The news tends to report individual data points, without the contextual information necessary to interpret it. | If the plot doesn&#39;t explicitly plot the rate of new cases, a change must be quite dramatic before it becomes distinguishable. | . This visualization plots the (sliding average of) daily new cases against the total cases, for each US state (with other countries and regions to come). This has the advantage of aligning all of them onto a baseline trajectory of exponential growth, with a very clear downward plummet when a given state gets the virus under control. As explained in the caveats below, this visualization has a very specific purpose: to make it clear whether a given state has managed to exit the exponential trajectory or not. . minutephysics has an excellent video on this visualization type, How To Tell If We&#39;re Beating COVID-19. . Caveats . The logarithmic scales can make it seem as if states are closer together than they actually are. For example, at time of writing (April 5th) New York (the leader in US cases) and New Jersey (the runner-up) look as though it&#39;s a close race, but New York has over three times as any cases as New Jersey. | The logarithmic scale can also obscure a resurgence of infections after a significant downturn, since the trace won&#39;t move much to the right during a short period late in time. | Time is represented by the animation, not by the x-axis, which is unusual for most charts made about COVID-19. This is the plot&#39;s main advantage, because it aligns states onto roughly the same trajectory regardless of population or testing rate, but it may be unexpected. | The true number of cases is unknown, so the actual slope of the log-log change plot is unknown. All states are also increasing their testing rate over time, so these data may imply that the infection rate is increasing faster than it actually is. | The data these plots rely on are incomplete, and come in less smoothly than they may imply. Healthcare systems around the world collect and report data when they can. | This chart plots the logarithm of the sliding window average of the daily growth rate on the y-axis, not the raw daily growth rate, because there&#39;s too much variability day-to-day to visually detect the trend. This also makes the plot a pessimistic estimate of where each state is on its trajectory. | Appendix USA - Animated visualization of growth . . Tip: Click on states in the legend to select/de-select, and double-click to isolate a single state. Clicking on states only work when the chart is paused. Hover over a line to show a tooltip with exact numbers. Use the slider or press Play to see the plot at different points in time. . The animated visualization for the US and the descriptions were made by Daniel Cox, with thanks to Henry of minutephysics for How To Tell If We&#39;re Beating COVID-19, and covidtracking.com for US data. . The static visualizations for the US, Africa, America, Asia-Pacific and Europe were made by Martin Boehler, with thanks to Daniel Cox for this great inspiration and implementation, and Johns Hopkins University CSSE for the 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository. .",
            "url": "https://covid19dashboards.com/us-inflection/",
            "relUrl": "/us-inflection/",
            "date": " • Mar 30, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Projections of ICU need by Country",
            "content": ". Warning: This dashboard contains the results of a predictive model that was not built by an epidemiologist. . Based on data up to: 2020-06-28 . World map (interactive) . Includes only countries with at least 1000 reported cases or at least 20 reported deaths. . Details of estimation and prediction calculations are in Appendix and in Tables, as well as Plots of model predictions. | New cases and new deaths refer to cases or deaths in the last 5 days. | . . Tip: Select columns to show on map to from the dropdown menus. The map is zoomable and draggable. . Tables . Projected need for ICU beds . Countries sorted by current ICU demand, split into Growing and Recovering countries by current transmission rate. . Details of estimation and prediction calculations are in Appendix, as well as Plots of model predictions. | Column definitions:- Estimated ICU need per 100k population: number of ICU beds estimated to be needed per 100k population by COVID-19 patents. - Estimated daily infection rate: daily percentage rate of new infections relative to active infections during last 5 days. Projected ICU need per 100k in 14 days: self explanatory. | Projected ICU need per 100k in 30 days: self explanatory. | ICU capacity per 100k: number of ICU beds per 100k population. | Estimated ICU Spare capacity per 100k: estimated ICU capacity per 100k population based on assumed normal occupancy rate of 70% and number of ICU beds (only for countries with ICU beds data). | . | . . Tip: The red (need for ICU) and the blue (ICU spare capacity) bars are on the same 0-10 scale, for easy visual comparison of columns. . hide . Growing countries (transmission rate above 5%) . EstimatedcurrentICU needper 100kpopulation Estimateddailytransmissionrate ProjectedICU needper 100kIn 14 days ProjectedICU needper 100kIn 30 days Pre-COVIDICUcapacity per 100k Pre-COVIDEstimated ICUSpare capacityper 100k . &#127462;&#127474; Armenia 11.70 | 7.0% ± 0.5% | 14.8 ± 1.1 | 19.5 ± 3.0 | - | - | . &#127477;&#127462; Panama 7.76 | 6.8% ± 0.9% | 9.5 ± 1.2 | 12.0 ± 3.1 | - | - | . &#127463;&#127479; Brazil 7.73 | 7.1% ± 1.2% | 9.5 ± 1.4 | 11.8 ± 3.7 | - | - | . &#127482;&#127480; US 7.53 | 7.0% ± 0.6% | 9.3 ± 0.7 | 11.9 ± 1.8 | 34.7 | 10.4 | . &#127463;&#127469; Bahrain 7.36 | 5.3% ± 1.1% | 7.6 ± 1.1 | 7.8 ± 2.5 | - | - | . &#127472;&#127484; Kuwait 4.99 | 5.8% ± 1.2% | 5.4 ± 0.8 | 5.9 ± 2.0 | - | - | . &#127474;&#127465; Moldova 4.66 | 5.3% ± 1.4% | 4.8 ± 0.9 | 4.9 ± 2.0 | - | - | . &#127474;&#127472; North Macedonia 4.59 | 6.1% ± 0.4% | 5.2 ± 0.3 | 6.0 ± 0.7 | - | - | . &#127476;&#127474; Oman 4.28 | 6.3% ± 0.9% | 5.0 ± 0.6 | 5.9 ± 1.6 | 14.6 | 4.4 | . &#127477;&#127481; Portugal 3.85 | 5.4% ± 0.9% | 4.0 ± 0.5 | 4.3 ± 1.1 | 4.2 | 1.3 | . &#127480;&#127462; Saudi Arabia 2.94 | 5.2% ± 0.4% | 3.0 ± 0.2 | 3.0 ± 0.3 | 22.8 | 6.8 | . &#127463;&#127476; Bolivia 2.94 | 6.8% ± 1.1% | 3.6 ± 0.5 | 4.5 ± 1.4 | - | - | . &#127464;&#127476; Colombia 2.51 | noisy data | noisy data | noisy data | - | - | . &#127487;&#127462; South Africa 2.31 | 8.9% ± 0.7% | 3.7 ± 0.4 | 6.5 ± 1.2 | - | - | . &#127462;&#127479; Argentina 2.24 | 8.3% ± 1.2% | 3.4 ± 0.6 | 5.6 ± 2.1 | - | - | . &#127465;&#127476; Dominican Republic 2.20 | 6.4% ± 1.0% | 2.6 ± 0.4 | 3.2 ± 0.9 | - | - | . &#127470;&#127473; Israel 1.93 | 8.6% ± 2.2% | 3.1 ± 1.1 | noisy data | - | - | . &#127462;&#127487; Azerbaijan 1.71 | 7.1% ± 0.7% | 2.2 ± 0.2 | 3.0 ± 0.6 | - | - | . &#127469;&#127475; Honduras 1.66 | 9.0% ± 1.6% | 2.8 ± 0.7 | noisy data | - | - | . &#127474;&#127485; Mexico 1.59 | 5.8% ± 1.0% | 1.7 ± 0.2 | 1.8 ± 0.5 | 1.2 | 0.4 | . &#127464;&#127483; Cabo Verde 1.57 | noisy data | noisy data | noisy data | - | - | . &#127463;&#127462; Bosnia 1.53 | noisy data | noisy data | noisy data | - | - | . &#127482;&#127462; Ukraine 1.49 | 6.6% ± 0.6% | 1.8 ± 0.1 | 2.3 ± 0.4 | - | - | . &#127466;&#127464; Ecuador 1.47 | noisy data | noisy data | noisy data | - | - | . &#127479;&#127476; Romania 1.39 | 6.3% ± 1.2% | 1.6 ± 0.3 | 2.0 ± 0.7 | - | - | . &#127473;&#127482; Luxembourg 1.38 | noisy data | noisy data | noisy data | 24.8 | 7.4 | . &#127462;&#127473; Albania 1.32 | 7.4% ± 0.8% | 1.8 ± 0.2 | 2.6 ± 0.6 | - | - | . &#127463;&#127468; Bulgaria 1.24 | 7.0% ± 2.2% | 1.6 ± 0.5 | noisy data | - | - | . &#127470;&#127479; Iran 1.19 | 5.0% ± 0.2% | 1.2 ± 0.0 | 1.1 ± 0.1 | 4.6 | 1.4 | . &#127479;&#127480; Serbia 1.15 | 8.6% ± 1.9% | 1.8 ± 0.6 | noisy data | - | - | . &#127480;&#127483; El Salvador 1.02 | 7.5% ± 0.3% | 1.4 ± 0.1 | 2.0 ± 0.2 | - | - | . &#127472;&#127487; Kazakhstan 1.01 | noisy data | noisy data | noisy data | 21.3 | 6.4 | . &#127464;&#127479; Costa Rica 0.94 | 10.5% ± 1.2% | 2.1 ± 0.4 | 5.4 ± 2.5 | - | - | . &#127464;&#127487; Czechia 0.90 | 10.0% ± 4.0% | noisy data | noisy data | 11.6 | 3.5 | . &#127470;&#127478; Iraq 0.83 | 8.5% ± 1.1% | 1.3 ± 0.2 | 2.0 ± 0.6 | - | - | . &#127481;&#127479; Turkey 0.80 | 5.1% ± 0.2% | 0.8 ± 0.0 | 0.8 ± 0.1 | 47.1 | 14.1 | . &#127468;&#127481; Guatemala 0.73 | 5.8% ± 2.6% | 0.8 ± 0.3 | noisy data | - | - | . &#127472;&#127468; Kyrgyzstan 0.69 | noisy data | noisy data | noisy data | - | - | . &#127463;&#127465; Bangladesh 0.69 | 5.9% ± 0.4% | 0.8 ± 0.0 | 0.9 ± 0.1 | 0.7 | 0.2 | . &#127474;&#127479; Mauritania 0.63 | 6.9% ± 2.3% | 0.8 ± 0.2 | noisy data | - | - | . &#127469;&#127479; Croatia 0.62 | 15.5% ± 6.0% | noisy data | noisy data | - | - | . &#127475;&#127477; Nepal 0.48 | 7.1% ± 1.3% | 0.6 ± 0.1 | 0.9 ± 0.3 | 2.8 | 0.8 | . &#127468;&#127478; Equatorial Guinea 0.45 | noisy data | noisy data | noisy data | - | - | . &#127462;&#127481; Austria 0.45 | 5.9% ± 1.9% | 0.5 ± 0.1 | noisy data | 21.8 | 6.5 | . &#127464;&#127469; Switzerland 0.44 | 7.3% ± 1.1% | 0.6 ± 0.1 | 0.8 ± 0.3 | 11.0 | 3.3 | . &#127466;&#127468; Egypt 0.43 | 5.0% ± 0.7% | 0.4 ± 0.0 | 0.4 ± 0.1 | - | - | . &#127470;&#127480; Iceland 0.38 | noisy data | noisy data | noisy data | 9.1 | 2.7 | . &#127470;&#127475; India 0.38 | 7.2% ± 0.2% | 0.5 ± 0.0 | 0.7 ± 0.0 | 5.2 | 1.6 | . &#127477;&#127480; West Bank and Gaza 0.34 | 15.2% ± 5.5% | noisy data | noisy data | - | - | . &#127477;&#127486; Paraguay 0.29 | 18.3% ± 7.2% | noisy data | noisy data | - | - | . &#127480;&#127470; Slovenia 0.25 | 9.5% ± 2.9% | 0.5 ± 0.2 | noisy data | 6.4 | 1.9 | . &#127468;&#127469; Ghana 0.24 | 6.8% ± 1.6% | 0.3 ± 0.1 | 0.4 ± 0.2 | - | - | . &#127483;&#127466; Venezuela 0.23 | 8.7% ± 2.5% | 0.4 ± 0.1 | noisy data | - | - | . &#127474;&#127462; Morocco 0.22 | 9.5% ± 4.4% | noisy data | noisy data | - | - | . &#127477;&#127469; Philippines 0.19 | 5.7% ± 1.4% | 0.2 ± 0.0 | 0.2 ± 0.1 | 2.2 | 0.7 | . &#127464;&#127470; Cote d&#39;Ivoire 0.16 | 5.3% ± 2.1% | 0.2 ± 0.1 | noisy data | - | - | . &#127482;&#127487; Uzbekistan 0.16 | 8.1% ± 1.6% | 0.2 ± 0.1 | noisy data | - | - | . &#127465;&#127487; Algeria 0.15 | 7.5% ± 1.4% | 0.2 ± 0.0 | 0.3 ± 0.1 | - | - | . &#127470;&#127465; Indonesia 0.15 | 6.0% ± 0.4% | 0.2 ± 0.0 | 0.2 ± 0.0 | 2.7 | 0.8 | . &#127473;&#127463; Lebanon 0.13 | 5.7% ± 1.4% | 0.1 ± 0.0 | 0.2 ± 0.1 | - | - | . &#127480;&#127475; Senegal 0.13 | 5.1% ± 0.5% | 0.1 ± 0.0 | 0.1 ± 0.0 | - | - | . &#127482;&#127486; Uruguay 0.12 | noisy data | noisy data | noisy data | - | - | . &#127480;&#127472; Slovakia 0.11 | 10.7% ± 3.9% | noisy data | noisy data | 9.2 | 2.8 | . &#127473;&#127486; Libya 0.10 | 6.2% ± 2.2% | 0.1 ± 0.0 | noisy data | - | - | . &#127462;&#127482; Australia 0.08 | noisy data | noisy data | noisy data | 9.1 | 2.7 | . &#127471;&#127477; Japan 0.08 | 6.6% ± 0.7% | 0.1 ± 0.0 | 0.1 ± 0.0 | 7.3 | 2.2 | . &#127473;&#127479; Liberia 0.08 | noisy data | noisy data | noisy data | - | - | . &#127463;&#127471; Benin 0.07 | noisy data | noisy data | noisy data | - | - | . &#127472;&#127466; Kenya 0.05 | 7.8% ± 1.7% | 0.1 ± 0.0 | noisy data | - | - | . &#127475;&#127468; Nigeria 0.05 | 6.1% ± 1.0% | 0.1 ± 0.0 | 0.1 ± 0.0 | - | - | . &#127474;&#127468; Madagascar 0.04 | 7.5% ± 1.7% | 0.1 ± 0.0 | noisy data | - | - | . &#127471;&#127476; Jordan 0.03 | 5.5% ± 2.3% | 0.0 ± 0.0 | noisy data | - | - | . &#127474;&#127484; Malawi 0.03 | noisy data | noisy data | noisy data | - | - | . &#127466;&#127481; Ethiopia 0.03 | 5.5% ± 1.6% | 0.0 ± 0.0 | noisy data | - | - | . &#127464;&#127465; Congo (Kinshasa) 0.03 | 5.8% ± 1.2% | 0.0 ± 0.0 | 0.0 ± 0.0 | - | - | . &#127475;&#127487; New Zealand 0.02 | 8.0% ± 3.4% | noisy data | noisy data | - | - | . &#127474;&#127473; Mali 0.02 | 5.7% ± 2.1% | 0.0 ± 0.0 | noisy data | - | - | . &#127463;&#127467; Burkina Faso 0.00 | noisy data | noisy data | noisy data | - | - | . Recovering countries (tranmission rate below 5%) . EstimatedcurrentICU needper 100kpopulation Estimateddailytransmissionrate ProjectedICU needper 100kIn 14 days ProjectedICU needper 100kIn 30 days Pre-COVIDICUcapacity per 100k Pre-COVIDEstimated ICUSpare capacityper 100k . &#127464;&#127473; Chile 20.37 | 3.6% ± 0.3% | 16.6 ± 0.6 | 12.8 ± 1.0 | - | - | . &#127478;&#127462; Qatar 9.81 | 3.7% ± 0.6% | 8.1 ± 0.7 | 6.4 ± 1.2 | - | - | . &#127480;&#127466; Sweden 9.37 | noisy data | noisy data | noisy data | 5.8 | 1.7 | . &#127477;&#127466; Peru 6.17 | 4.6% ± 0.3% | 5.6 ± 0.2 | 5.0 ± 0.4 | - | - | . &#127463;&#127486; Belarus 5.71 | 2.8% ± 0.3% | 4.3 ± 0.2 | 3.0 ± 0.3 | - | - | . &#127479;&#127482; Russia 4.41 | 4.0% ± 0.2% | 3.9 ± 0.1 | 3.3 ± 0.2 | 8.3 | 2.5 | . &#127480;&#127468; Singapore 3.75 | 3.1% ± 0.8% | 2.9 ± 0.3 | 2.1 ± 0.5 | 11.4 | 3.4 | . &#127468;&#127463; United Kingdom 2.08 | 3.3% ± 0.8% | 1.6 ± 0.2 | 1.2 ± 0.3 | 6.6 | 2.0 | . &#127464;&#127462; Canada 1.23 | 2.6% ± 0.7% | 0.9 ± 0.1 | 0.6 ± 0.1 | 13.5 | 4.0 | . &#127474;&#127483; Maldives 1.22 | 3.4% ± 1.2% | 1.0 ± 0.2 | 0.7 ± 0.3 | - | - | . &#127463;&#127466; Belgium 1.16 | 3.5% ± 0.3% | 0.9 ± 0.0 | 0.7 ± 0.1 | 15.9 | 4.8 | . &#127465;&#127471; Djibouti 1.16 | noisy data | 0.6 ± 0.1 | 0.3 ± 0.1 | - | - | . &#127468;&#127462; Gabon 1.02 | noisy data | 0.9 ± 0.4 | noisy data | - | - | . &#127462;&#127466; UAE 1.02 | 4.1% ± 0.2% | 0.9 ± 0.0 | 0.8 ± 0.1 | - | - | . &#127466;&#127480; Spain 1.01 | 4.4% ± 1.0% | 0.9 ± 0.1 | 0.8 ± 0.2 | 9.7 | 2.9 | . &#127477;&#127473; Poland 0.84 | 3.7% ± 0.6% | 0.7 ± 0.1 | 0.6 ± 0.1 | 6.9 | 2.1 | . &#127475;&#127473; Netherlands 0.81 | 2.9% ± 0.5% | 0.6 ± 0.0 | 0.4 ± 0.1 | 6.4 | 1.9 | . &#127467;&#127479; France 0.74 | noisy data | noisy data | noisy data | 11.6 | 3.5 | . &#127470;&#127481; Italy 0.71 | noisy data | 0.6 ± 0.2 | noisy data | 12.5 | 3.8 | . &#127465;&#127472; Denmark 0.71 | noisy data | 0.5 ± 0.2 | noisy data | 6.7 | 2.0 | . &#127465;&#127466; Germany 0.68 | 4.1% ± 1.3% | 0.6 ± 0.1 | 0.5 ± 0.2 | 29.2 | 8.8 | . &#127477;&#127472; Pakistan 0.55 | 3.9% ± 0.6% | 0.5 ± 0.0 | 0.4 ± 0.1 | 1.5 | 0.4 | . &#127470;&#127466; Ireland 0.48 | noisy data | 0.3 ± 0.0 | 0.2 ± 0.1 | 6.5 | 1.9 | . &#127467;&#127470; Finland 0.33 | noisy data | 0.2 ± 0.1 | noisy data | 6.1 | 1.8 | . &#127469;&#127481; Haiti 0.32 | noisy data | 0.3 ± 0.1 | noisy data | - | - | . &#127464;&#127467; CAR (Africa) 0.31 | noisy data | 0.3 ± 0.1 | noisy data | - | - | . &#127466;&#127466; Estonia 0.28 | noisy data | 0.2 ± 0.0 | 0.1 ± 0.0 | 14.6 | 4.4 | . &#127475;&#127476; Norway 0.27 | noisy data | noisy data | noisy data | 8.0 | 2.4 | . &#127462;&#127467; Afghanistan 0.23 | 2.8% ± 1.3% | 0.2 ± 0.0 | 0.1 ± 0.0 | - | - | . &#127475;&#127470; Nicaragua 0.23 | 0.0% ± 0.0% | 0.1 ± 0.0 | 0.1 ± 0.0 | - | - | . &#127473;&#127481; Lithuania 0.21 | noisy data | 0.1 ± 0.0 | 0.1 ± 0.0 | 15.5 | 4.6 | . &#127468;&#127479; Greece 0.18 | 4.2% ± 1.8% | 0.2 ± 0.0 | noisy data | 6.0 | 1.8 | . &#127481;&#127471; Tajikistan 0.18 | 3.5% ± 0.4% | 0.1 ± 0.0 | 0.1 ± 0.0 | - | - | . &#127464;&#127474; Cameroon 0.15 | noisy data | 0.1 ± 0.0 | noisy data | - | - | . &#127468;&#127484; Guinea-Bissau 0.13 | noisy data | noisy data | noisy data | - | - | . &#127473;&#127483; Latvia 0.13 | noisy data | 0.1 ± 0.0 | noisy data | 9.7 | 2.9 | . &#127469;&#127482; Hungary 0.12 | 2.8% ± 1.1% | 0.1 ± 0.0 | 0.1 ± 0.0 | 13.8 | 4.1 | . &#127468;&#127475; Guinea 0.09 | noisy data | noisy data | noisy data | - | - | . &#127480;&#127465; Sudan 0.08 | noisy data | 0.1 ± 0.0 | noisy data | - | - | . &#127472;&#127479; South Korea 0.07 | 4.7% ± 1.2% | 0.1 ± 0.0 | 0.1 ± 0.0 | 10.6 | 3.2 | . &#127464;&#127482; Cuba 0.07 | noisy data | 0.0 ± 0.0 | 0.0 ± 0.0 | - | - | . &#127464;&#127468; Congo (Brazzaville) 0.06 | 0.0% ± 0.0% | 0.0 ± 0.0 | 0.0 ± 0.0 | - | - | . &#127480;&#127480; South Sudan 0.06 | noisy data | 0.0 ± 0.0 | noisy data | - | - | . &#127480;&#127473; Sierra Leone 0.05 | noisy data | 0.0 ± 0.0 | noisy data | - | - | . &#127473;&#127472; Sri Lanka 0.04 | noisy data | 0.0 ± 0.0 | 0.0 ± 0.0 | 2.3 | 0.7 | . &#127480;&#127476; Somalia 0.03 | noisy data | 0.0 ± 0.0 | noisy data | - | - | . &#127474;&#127486; Malaysia 0.03 | noisy data | 0.0 ± 0.0 | 0.0 ± 0.0 | 3.4 | 1.0 | . &#127486;&#127466; Yemen 0.02 | noisy data | noisy data | noisy data | - | - | . &#127481;&#127475; Tunisia 0.02 | noisy data | 0.0 ± 0.0 | 0.0 ± 0.0 | - | - | . &#127487;&#127474; Zambia 0.02 | noisy data | 0.0 ± 0.0 | noisy data | - | - | . &#127481;&#127465; Chad 0.00 | noisy data | 0.0 ± 0.0 | 0.0 ± 0.0 | - | - | . &#127475;&#127466; Niger 0.00 | noisy data | noisy data | noisy data | - | - | . &#127481;&#127469; Thailand 0.00 | noisy data | 0.0 ± 0.0 | noisy data | 10.4 | 3.1 | . &#127464;&#127475; China 0.00 | 3.9% ± 0.9% | 0.0 ± 0.0 | 0.0 ± 0.0 | 3.6 | 1.1 | . &#127481;&#127487; Tanzania 0.00 | 0.0% ± 0.0% | 0.0 ± 0.0 | 0.0 ± 0.0 | - | - | . Appendix . . Interactive plot of model predictions and past data . . Tip: Choose a country from the drop-down menu to see the calculations used in the tables above and the dynamics of the model. . Projected Affected Population percentages . Top 20 countries with most estimated recent cases. . Sorted by number of estimated recent cases during the last 5 days. | Column definitions:- Estimated recent cases in last 5 days: self explanatory. - Estimated total affected population percentage: estimated percentage of total population already affected (infected, recovered, or dead). Estimated daily tranmission rate: daily percentage rate of recent infections relative to active infections during last 5 days. | Projected total affected percentage in 14 days: of population. | Projected total affected percentage in 30 days: of population. | Lagged fatality rate: reported total deaths divided by total cases 8 days ago. | . | . Estimated new cases in last 5 days Estimated totalaffectedpopulationpercentage Estimateddailytranmissionrate ProjectedtotalaffectedpercentageIn 14 days ProjectedtotalaffectedpercentageIn 30 days Laggedfatality percentage . &#127463;&#127479; Brazil 1,305,228 | 5.5% | 7.1% ± 1.2% | 7.9% ± 0.6% | 11.6% ± 2.1% | 5.3% | . &#127482;&#127480; US 934,008 | 4.4% | 7.0% ± 0.6% | 5.4% ± 0.1% | 7.0% ± 0.4% | 5.5% | . &#127470;&#127475; India 642,901 | 0.4% | 7.2% ± 0.2% | 0.5% ± 0.0% | 0.9% ± 0.0% | 3.9% | . &#127474;&#127485; Mexico 559,599 | 4.8% | 5.8% ± 1.0% | 6.4% ± 0.4% | 8.4% ± 1.2% | 14.8% | . &#127470;&#127478; Iraq 183,624 | 2.5% | 8.5% ± 1.1% | 4.7% ± 0.5% | 8.7% ± 1.8% | 5.7% | . &#127487;&#127462; South Africa 168,484 | 1.6% | 8.9% ± 0.7% | 2.9% ± 0.2% | 5.7% ± 0.8% | 2.5% | . &#127464;&#127476; Colombia 143,985 | 1.5% | noisy data | 2.6% ± 1.2% | noisy data | 4.7% | . &#127470;&#127479; Iran 111,155 | 2.9% | 5.0% ± 0.2% | 3.4% ± 0.0% | 3.9% ± 0.1% | 5.1% | . &#127477;&#127472; Pakistan 95,544 | 0.7% | 3.9% ± 0.6% | 0.8% ± 0.0% | 1.0% ± 0.1% | 2.3% | . &#127477;&#127466; Peru 92,659 | 5.4% | 4.6% ± 0.3% | 6.3% ± 0.1% | 7.3% ± 0.2% | 3.7% | . &#127466;&#127468; Egypt 76,615 | 0.9% | 5.0% ± 0.7% | 1.1% ± 0.1% | 1.5% ± 0.1% | 5.1% | . &#127470;&#127465; Indonesia 65,197 | 0.3% | 6.0% ± 0.4% | 0.4% ± 0.0% | 0.5% ± 0.0% | 6.0% | . &#127466;&#127464; Ecuador 61,274 | 5.4% | noisy data | 6.4% ± 1.0% | 7.8% ± 3.6% | 8.7% | . &#127463;&#127465; Bangladesh 56,758 | 0.3% | 5.9% ± 0.4% | 0.5% ± 0.0% | 0.6% ± 0.0% | 1.5% | . &#127468;&#127463; United Kingdom 54,783 | 5.9% | 3.3% ± 0.8% | 6.1% ± 0.1% | 6.3% ± 0.1% | 14.3% | . &#127464;&#127473; Chile 51,453 | 4.2% | 3.6% ± 0.3% | 5.0% ± 0.1% | 5.8% ± 0.2% | 2.3% | . &#127479;&#127482; Russia 45,991 | 0.7% | 4.0% ± 0.2% | 0.8% ± 0.0% | 0.9% ± 0.0% | 1.6% | . &#127480;&#127462; Saudi Arabia 43,795 | 1.5% | 5.2% ± 0.4% | 2.0% ± 0.0% | 2.5% ± 0.1% | 1.0% | . &#127462;&#127479; Argentina 40,992 | 0.6% | 8.3% ± 1.2% | 1.0% ± 0.1% | 1.8% ± 0.5% | 2.9% | . &#127469;&#127475; Honduras 36,021 | 2.0% | 9.0% ± 1.6% | 3.7% ± 0.5% | 7.3% ± 2.5% | 3.8% | . Methodology . I&#39;m not an epidemiologist. This is an attempt to understand what&#39;s happening, and what the future looks like if current trends remain unchanged. | Everything is approximated and depends heavily on underlying assumptions. | Projection is done using a simple SIR model (see examples) combined with the approach in Total Outstanding Cases: Growth rate is calculated over the 5 past days. | Confidence bounds are calculated by from the weighted standard deviation of the growth rate over the last 5 days. Model predictions are calculated for growth rates within 1 STD of the weighted mean. The maximum and minimum values for each day are used as confidence bands. | For projections (into future) very noisy projections (with broad confidence bounds) are not shown in the tables. | Where the rate estimated from Total Outstanding Cases is too high (on down-slopes) recovery probability if 1/20 is used (equivalent 20 days to recover). | . | Total cases are estimated from the reported deaths for each country: Each country has different testing policy and capacity and cases are under-reported in some countries. Using an estimated IFR (fatality rate) we can estimate the number of cases some time ago by using the total deaths until today. We can than use this estimation to estimate the testing bias and multiply the current reported case numbers by that. | IFRs for each country is estimated using the age IFRs from May 1 New York paper and UN demographic data for 2020. These IFRs can be found in df[&#39;age_adjusted_ifr&#39;] column. Some examples: US - 0.98%, UK - 1.1%, Qatar - 0.25%, Italy - 1.4%, Japan - 1.6%. | The average fatality lag is assumed to be 8 days on average for a case to go from being confirmed positive (after incubation + testing lag) to death. This is the same figure used by &quot;Estimating The Infected Population From Deaths&quot;. | Testing bias: the actual lagged fatality rate is than divided by the IFR to estimate the testing bias in a country. The estimated testing bias then multiplies the reported case numbers to estimate the true case numbers (=case numbers if testing coverage was as comprehensive as in the heavily tested countries). | . | ICU need is calculated and age-adjusted as follows: UK ICU ratio was reported as 4.4% of active reported cases. | Using UKs ICU ratio and IFRs corrected for age demographics we can estimate each country&#39;s ICU ratio (the number of cases requiring ICU hospitalisation). For example using the IFR ratio between UK and Qatar to devide UK&#39;s 4.4% we get an ICU ratio of around 1% for Qatar which is also the ratio they report to WHO here. | Active cases are taken from the SIR model. The ICU need is calculated from reported cases rather than from total estimated active cases. This is because the ICU ratio (4.4%) is based on reported cases. | Pre COVID-19 ICU capacities are from Wikipedia (OECD countries mostly) and CCB capacities in Asia. | Pre COVID-19 ICU spare capacity is based on 70% normal occupancy rate (66% in US, 75% OECD) | . | .",
            "url": "https://covid19dashboards.com/covid-progress-projections/",
            "relUrl": "/covid-progress-projections/",
            "date": " • Mar 29, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "COVID-19 Growth By State (US)",
            "content": "An Exception was encountered at &#39;In [10]&#39;. . Comparisons with California (CA), Washington (WA) &amp; New York (NY) are show by default. . Tip: Click (Shift+ for multiple) on states in the legend to filter the visualizations below. Click outside the legend to highlight all states. . Total Cases . . Warning: The number of cases per capita can be heavily biased depending on a state&#8217;s testing procedures and how widely the population is tested. Read with caution. . Total Deaths . Execution using papermill encountered an exception here and stopped: . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . This visualization was made by Avy Faingezicht, Rob Zinkov and Pratap Vardhan1. Assistance provided by Hamel Husain. . . Data sourced from &quot;The COVID Tracking Project&quot;. Updated hourly by GitHub Actions.&#8617; . |",
            "url": "https://covid19dashboards.com/growth-us-states/",
            "relUrl": "/growth-us-states/",
            "date": " • Mar 27, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "Total Outstanding Cases",
            "content": ". Note: This dashboard contains the results of a predictive model. The author has tried to make it as accurate as possible. But the COVID-19 situation is changing quickly, and these models inevitably include some level of speculation. . Outstanding Cases by Geography . The chart below shows the total predicted number of outstanding cases, i.e. number of individuals who are still currently ill. . The chart also represents the reported case fatality rate (CFR) via the color of the country, which is heavily biased by the amount of testing which is performed in each country. . Tip: Change the scale of the y axis with the toggle button and hover over chart areas for more details. . Toggle Scale The table below shows summary statistics for the last 7 days. $Oustanding = Confirmed - Deaths - Recovered$. . Confirmed Deaths Est. Recoveries Outstanding . 2020-06-22 9099271 | 472171 | 6259074 | 2368026 | . 2020-06-23 9264657 | 477587 | 6374819 | 2412251 | . 2020-06-24 9432072 | 482758 | 6491007 | 2458307 | . 2020-06-25 9610551 | 489312 | 6608844 | 2512395 | . 2020-06-26 9802294 | 494181 | 6730757 | 2577356 | . 2020-06-27 9980257 | 498710 | 6853869 | 2627678 | . 2020-06-28 10145791 | 501893 | 6981047 | 2662851 | . Percent of Global Total . This next chart shows the number of outstanding cases as a percent of the total confirmed global cases. Only countries representing a significant contribution to global totals are shown. . Tip: Hover over chart areas for more details. . Appendix: Methodology of Predicting Recovered Cases . John Hopkin&#39;s University&#39;s (JHU) dataset initially reported recovered cases but has since discontinued this, however estimating the recovery duration and extrapolating for current cases should be possible from this original data. . For the time being (I hope to draw from other discussions of this topic), I will use an empirically derived formula from the limited data available from JHU: . $$R_{n} = R_{n-1} + (C_{n-9} - R_{n-1})*0.07$$ . Where $R_{n}$ is the total number of recovered cases on day $n$, and $C_{n}$ is the total number of confirmed cases on day $n$. . What it implies is that on a given day, of the cases which were first reported 9 days previously 7% of those cases would have either recovered or passed away. After 16 days therefore 49% of cases would have recovered or passed away and after 23 days 98% of cases would have recovered or passsed away. . This formula is only being used to predict the number of recoveries from the time that JHU&#39;s data is not available. We can compare the results of this formula to the existing data from JHU to show the level of fit. This can be seen in the following 2 graphs. . Visualizations and analysis by Adrian Turcato1 . . Source: &quot;COVID-19 Data Repository by Johns Hopkins CSSE&quot; GitHub repository.&#8617; . |",
            "url": "https://covid19dashboards.com/outstanding_cases/",
            "relUrl": "/outstanding_cases/",
            "date": " • Mar 23, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "COVID-19 Overview",
            "content": "WorldUSEurope World Confirmed Cases 10,143,622 (+881,138) Deaths 501,856 (+24,307) Updated on June 28, 2020 ( +change since 5 days ago.) . China Cases 84,757 (+104) Deaths 4,641 (+1) Europe Cases 2,402,953 (+70,569) Deaths 190,688 (+2,121) U.S. Cases 2,548,996 (+201,505) Deaths 125,803 (+4,572) In the last 5 days, 881,138 new Coronavirus cases have been reported worldwide. Of which 70,569 (8%) are from Europe. China has reported 104 new cases in the last 5 days. . 10 100 1000 . Country New Cases Total Cases Deaths Fatality . | May. 09 Jun. 28 | | (+NEW) since Jun, 23 | | | . US | | 2,548,996 | (+201,505) | 125,803 | (+4,572) | 4.9% | . Brazil | | 1,344,143 | (+198,237) | 57,622 | (+4,977) | 4.3% | . Russia | | 633,563 | (+34,685) | 9,060 | (+711) | 1.4% | . India | | 548,318 | (+92,135) | 16,475 | (+1,999) | 3.0% | . United Kingdom | | 312,640 | (+4,958) | 43,634 | (+623) | 14.0% | . Peru | | 279,419 | (+18,609) | 9,317 | (+913) | 3.3% | . Chile | | 271,982 | (+21,215) | 5,509 | (+1,004) | 2.0% | . Spain | | 248,770 | (+2,018) | 28,343 | (+18) | 11.4% | . Italy | | 240,310 | (+1,477) | 34,738 | (+63) | 14.5% | . Iran | | 222,669 | (+12,699) | 10,508 | (+645) | 4.7% | . Mexico | | 216,852 | (+25,442) | 26,648 | (+3,271) | 12.3% | . Pakistan | | 206,512 | (+17,586) | 4,167 | (+412) | 2.0% | . France | | 199,476 | (+950) | 29,781 | (+58) | 14.9% | . Turkey | | 197,239 | (+7,074) | 5,097 | (+96) | 2.6% | . Germany | | 194,693 | (+2,213) | 8,968 | (+54) | 4.6% | . Saudi Arabia | | 182,493 | (+18,349) | 1,551 | (+205) | 0.8% | . South Africa | | 138,134 | (+32,026) | 2,456 | (+354) | 1.8% | . Bangladesh | | 137,787 | (+18,589) | 1,738 | (+193) | 1.3% | . Canada | | 105,193 | (+1,426) | 8,582 | (+70) | 8.2% | . Qatar | | 94,413 | (+4,834) | 110 | (+11) | 0.1% | . Colombia | | 91,995 | (+18,235) | 3,256 | (+732) | 3.5% | . China | | 84,757 | (+104) | 4,641 | (+1) | 5.5% | . Egypt | | 65,188 | (+7,047) | 2,789 | (+424) | 4.3% | . Sweden | | 65,137 | (+4,300) | 5,280 | (+119) | 8.1% | . Belarus | | 61,475 | (+1,988) | 383 | (+26) | 0.6% | . Belgium | | 61,295 | (+485) | 9,732 | (+19) | 15.9% | . Argentina | | 59,933 | (+12,730) | 1,232 | (+154) | 2.1% | . Ecuador | | 55,255 | (+3,612) | 4,429 | (+155) | 8.0% | . Indonesia | | 54,010 | (+6,114) | 2,754 | (+219) | 5.1% | . Netherlands | | 50,355 | (+425) | 6,124 | (+10) | 12.2% | . United Arab Emirates | | 47,797 | (+2,114) | 313 | (+8) | 0.7% | . Iraq | | 45,402 | (+10,900) | 1,756 | (+505) | 3.9% | . Kuwait | | 44,942 | (+3,909) | 348 | (+14) | 0.8% | . Ukraine | | 43,856 | (+4,955) | 1,142 | (+97) | 2.6% | . Singapore | | 43,459 | (+1,027) | 26 | (+0) | 0.1% | . Portugal | | 41,646 | (+1,909) | 1,564 | (+24) | 3.8% | . Oman | | 38,150 | (+5,756) | 163 | (+23) | 0.4% | . Philippines | | 35,455 | (+3,630) | 1,244 | (+58) | 3.5% | . Poland | | 33,907 | (+1,380) | 1,438 | (+63) | 4.2% | . Panama | | 31,686 | (+4,372) | 604 | (+68) | 1.9% | . Switzerland | | 31,617 | (+285) | 1,962 | (+6) | 6.2% | . Bolivia | | 31,524 | (+5,135) | 1,014 | (+168) | 3.2% | . Dominican Republic | | 31,373 | (+3,437) | 726 | (+51) | 2.3% | . Afghanistan | | 30,967 | (+1,486) | 721 | (+103) | 2.3% | . Romania | | 26,313 | (+1,808) | 1,612 | (+73) | 6.1% | . Bahrain | | 25,705 | (+2,643) | 83 | (+16) | 0.3% | . Ireland | | 25,439 | (+48) | 1,735 | (+15) | 6.8% | . Armenia | | 24,645 | (+3,639) | 426 | (+54) | 1.7% | . Nigeria | | 24,567 | (+3,196) | 565 | (+32) | 2.3% | . Israel | | 23,755 | (+2,243) | 318 | (+10) | 1.3% | . Kazakhstan | | 21,327 | (+2,562) | 178 | (+44) | 0.8% | . Japan | | 18,366 | (+487) | 972 | (+7) | 5.3% | . Honduras | | 18,082 | (+4,139) | 479 | (+74) | 2.6% | . Austria | | 17,654 | (+246) | 702 | (+9) | 4.0% | . Guatemala | | 16,930 | (+2,390) | 727 | (+145) | 4.3% | . Ghana | | 16,742 | (+2,174) | 112 | (+17) | 0.7% | . Azerbaijan | | 16,424 | (+2,709) | 198 | (+31) | 1.2% | . Moldova | | 16,250 | (+1,536) | 530 | (+40) | 3.3% | . Serbia | | 14,046 | (+954) | 270 | (+7) | 1.9% | . Algeria | | 13,273 | (+1,197) | 897 | (+36) | 6.8% | . Denmark | | 12,875 | (+114) | 604 | (+1) | 4.7% | . Nepal | | 12,772 | (+2,673) | 28 | (+4) | 0.2% | . South Korea | | 12,757 | (+222) | 282 | (+1) | 2.2% | . Cameroon | | 12,592 | (+322) | 313 | (+0) | 2.5% | . Morocco | | 12,052 | (+1,708) | 221 | (+7) | 1.8% | . Czechia | | 11,603 | (+953) | 348 | (+9) | 3.0% | . Sudan | | 9,257 | (+368) | 572 | (+24) | 6.2% | . Cote d&#39;Ivoire | | 9,101 | (+1,197) | 66 | (+8) | 0.7% | . Norway | | 8,855 | (+83) | 249 | (+1) | 2.8% | . Malaysia | | 8,634 | (+44) | 121 | (+0) | 1.4% | . Uzbekistan | | 7,948 | (+1,286) | 22 | (+3) | 0.3% | . Australia | | 7,764 | (+243) | 104 | (+1) | 1.3% | . Finland | | 7,198 | (+43) | 328 | (+1) | 4.6% | . Congo (Kinshasa) | | 6,827 | (+800) | 157 | (+22) | 2.3% | . Senegal | | 6,586 | (+552) | 105 | (+16) | 1.6% | . North Macedonia | | 6,080 | (+769) | 286 | (+35) | 4.7% | . Kenya | | 6,070 | (+1,118) | 143 | (+15) | 2.4% | . El Salvador | | 5,934 | (+961) | 152 | (+39) | 2.6% | . Tajikistan | | 5,849 | (+282) | 52 | (+0) | 0.9% | . Haiti | | 5,777 | (+453) | 100 | (+11) | 1.7% | . Ethiopia | | 5,689 | (+841) | 98 | (+23) | 1.7% | . Guinea | | 5,342 | (+302) | 31 | (+3) | 0.6% | . Venezuela | | 5,297 | (+1,110) | 44 | (+9) | 0.8% | . Gabon | | 5,209 | (+360) | 40 | (+1) | 0.8% | . Kyrgyzstan | | 5,017 | (+1,291) | 50 | (+8) | 1.0% | . Bulgaria | | 4,691 | (+577) | 219 | (+11) | 4.7% | . Djibouti | | 4,643 | (+26) | 52 | (+3) | 1.1% | . Luxembourg | | 4,242 | (+109) | 110 | (+0) | 2.6% | . Mauritania | | 4,149 | (+857) | 126 | (+12) | 3.0% | . Hungary | | 4,142 | (+35) | 581 | (+8) | 14.0% | . Bosnia and Herzegovina | | 3,935 | (+347) | 178 | (+6) | 4.5% | . Central African Republic | | 3,429 | (+378) | 45 | (+8) | 1.3% | . Greece | | 3,376 | (+74) | 191 | (+1) | 5.7% | . Thailand | | 3,162 | (+6) | 58 | (+0) | 1.8% | . Costa Rica | | 3,130 | (+762) | 15 | (+3) | 0.5% | . Somalia | | 2,894 | (+82) | 90 | (+0) | 3.1% | . Croatia | | 2,691 | (+325) | 107 | (+0) | 4.0% | . Albania | | 2,402 | (+355) | 55 | (+10) | 2.3% | . Cuba | | 2,332 | (+14) | 86 | (+1) | 3.7% | . Maldives | | 2,324 | (+86) | 8 | (+0) | 0.3% | . Nicaragua | | 2,170 | (+0) | 74 | (+0) | 3.4% | . Mali | | 2,147 | (+169) | 114 | (+3) | 5.3% | . Paraguay | | 2,127 | (+705) | 15 | (+2) | 0.7% | . Madagascar | | 2,078 | (+354) | 18 | (+3) | 0.9% | . Sri Lanka | | 2,037 | (+46) | 11 | (+0) | 0.5% | . Equatorial Guinea | | 2,001 | (+337) | 32 | (+0) | 1.6% | . West Bank and Gaza | | 1,990 | (+821) | 4 | (+1) | 0.2% | . South Sudan | | 1,989 | (+59) | 36 | (+0) | 1.8% | . Estonia | | 1,987 | (+5) | 69 | (+0) | 3.5% | . Iceland | | 1,838 | (+14) | 10 | (+0) | 0.5% | . Lithuania | | 1,815 | (+12) | 78 | (+1) | 4.3% | . Lebanon | | 1,740 | (+118) | 34 | (+2) | 2.0% | . Slovakia | | 1,664 | (+75) | 28 | (+0) | 1.7% | . Guinea-Bissau | | 1,614 | (+58) | 22 | (+3) | 1.4% | . Slovenia | | 1,581 | (+47) | 111 | (+2) | 7.0% | . Zambia | | 1,557 | (+80) | 22 | (+4) | 1.4% | . New Zealand | | 1,528 | (+12) | 22 | (+0) | 1.4% | . Sierra Leone | | 1,427 | (+80) | 60 | (+5) | 4.2% | . Tunisia | | 1,169 | (+10) | 50 | (+0) | 4.3% | . Cabo Verde | | 1,155 | (+173) | 12 | (+4) | 1.0% | . Benin | | 1,149 | (+299) | 16 | (+3) | 1.4% | . Malawi | | 1,146 | (+343) | 13 | (+2) | 1.1% | . Jordan | | 1,121 | (+74) | 9 | (+0) | 0.8% | . Yemen | | 1,118 | (+126) | 302 | (+41) | 27.0% | . Latvia | | 1,116 | (+5) | 30 | (+0) | 2.7% | . Congo (Brazzaville) | | 1,087 | (+0) | 37 | (+0) | 3.4% | . Niger | | 1,074 | (+23) | 67 | (+0) | 6.2% | . Cyprus | | 994 | (+4) | 19 | (+0) | 1.9% | . Burkina Faso | | 959 | (+52) | 53 | (+0) | 5.5% | . Uruguay | | 929 | (+44) | 27 | (+2) | 2.9% | . Georgia | | 924 | (+13) | 15 | (+1) | 1.6% | . Rwanda | | 900 | (+102) | 2 | (+0) | 0.2% | . Chad | | 866 | (+6) | 74 | (+0) | 8.5% | . Mozambique | | 859 | (+102) | 5 | (+0) | 0.6% | . Uganda | | 859 | (+62) | 0 | (+0) | 0.0% | . Andorra | | 855 | (+0) | 52 | (+0) | 6.1% | . Eswatini | | 781 | (+107) | 11 | (+4) | 1.4% | . Liberia | | 768 | (+116) | 34 | (+0) | 4.4% | . Libya | | 762 | (+123) | 21 | (+4) | 2.8% | . Sao Tome and Principe | | 713 | (+6) | 13 | (+1) | 1.8% | . Diamond Princess | | 712 | (+0) | 13 | (+0) | 1.8% | . San Marino | | 698 | (+0) | 42 | (+0) | 6.0% | . Jamaica | | 696 | (+26) | 10 | (+0) | 1.4% | . Malta | | 670 | (+5) | 9 | (+0) | 1.3% | . Togo | | 642 | (+66) | 14 | (+1) | 2.2% | . Zimbabwe | | 567 | (+42) | 6 | (+0) | 1.1% | . Tanzania | | 509 | (+0) | 21 | (+0) | 4.1% | . Suriname | | 490 | (+171) | 11 | (+2) | 2.2% | . Montenegro | | 481 | (+103) | 11 | (+2) | 2.3% | . Taiwan* | | 447 | (+1) | 7 | (+0) | 1.6% | . Vietnam | | 355 | (+6) | 0 | (+0) | 0.0% | . Mauritius | | 341 | (+1) | 10 | (+0) | 2.9% | . Burma | | 299 | (+7) | 6 | (+0) | 2.0% | . Comoros | | 272 | (+7) | 7 | (+0) | 2.6% | . Angola | | 267 | (+78) | 11 | (+1) | 4.1% | . Syria | | 256 | (+25) | 9 | (+2) | 3.5% | . Guyana | | 230 | (+24) | 12 | (+0) | 5.2% | . Mongolia | | 220 | (+5) | 0 | (+0) | 0.0% | . Eritrea | | 191 | (+48) | 0 | (+0) | 0.0% | . Namibia | | 183 | (+111) | 0 | (+0) | 0.0% | . Burundi | | 170 | (+26) | 1 | (+0) | 0.6% | . Brunei | | 141 | (+0) | 3 | (+0) | 2.1% | . Cambodia | | 141 | (+11) | 0 | (+0) | 0.0% | . Trinidad and Tobago | | 126 | (+3) | 8 | (+0) | 6.3% | . Bahamas | | 104 | (+0) | 11 | (+0) | 10.6% | . Monaco | | 103 | (+2) | 4 | (+0) | 3.9% | . Barbados | | 97 | (+0) | 7 | (+0) | 7.2% | . Botswana | | 92 | (+3) | 1 | (+0) | 1.1% | . Liechtenstein | | 82 | (+0) | 1 | (+0) | 1.2% | . Bhutan | | 76 | (+6) | 0 | (+0) | 0.0% | . Seychelles | | 70 | (+59) | 0 | (+0) | 0.0% | . Antigua and Barbuda | | 69 | (+43) | 3 | (+0) | 4.3% | . Gambia | | 45 | (+3) | 2 | (+0) | 4.4% | . Saint Vincent and the Grenadines | | 29 | (+0) | 0 | (+0) | 0.0% | . Lesotho | | 27 | (+10) | 0 | (+0) | 0.0% | . Belize | | 24 | (+1) | 2 | (+0) | 8.3% | . Timor-Leste | | 24 | (+0) | 0 | (+0) | 0.0% | . Grenada | | 23 | (+0) | 0 | (+0) | 0.0% | . Laos | | 19 | (+0) | 0 | (+0) | 0.0% | . Saint Lucia | | 19 | (+0) | 0 | (+0) | 0.0% | . Dominica | | 18 | (+0) | 0 | (+0) | 0.0% | . Fiji | | 18 | (+0) | 0 | (+0) | 0.0% | . Saint Kitts and Nevis | | 15 | (+0) | 0 | (+0) | 0.0% | . Holy See | | 12 | (+0) | 0 | (+0) | 0.0% | . Papua New Guinea | | 11 | (+2) | 0 | (+0) | 0.0% | . Western Sahara | | 10 | (+0) | 1 | (+0) | 10.0% | . MS Zaandam | | 9 | (+0) | 2 | (+0) | 22.2% | . Visualizations by Pratap Vardhan1 . . Source: &quot;COVID-19 Data Repository by Johns Hopkins CSSE&quot; GitHub repository. Link to notebook, orignal interactive&#8617; . |",
            "url": "https://covid19dashboards.com/covid-overview/",
            "relUrl": "/covid-overview/",
            "date": " • Mar 21, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "COVID-19 Tracking U.S. Cases",
            "content": "WorldUSEurope US Confirmed Cases 2,564,681 (+204,781) Deaths 125,814 (+4,647) Updated on June 28, 2020 ( +change since 5 days ago.) . New York Cases 397,293 (+3,438) Deaths 31,137 (+167) Washington Cases 33,341 (+2,563) Deaths 1,311 (+26) California Cases 216,955 (+25,916) Deaths 5,937 (+300) In the last 5 days, 204,781 new Coronavirus cases have been reported in the US. Of which 3,438 (2%) are from New York State. Washington has reported 2,563 new cases in the last 5 days. . 5 50 500 . State New Cases Total Cases Deaths Fatality . | Jun. 14 Jun. 28 | | (+NEW) since Jun, 23 | | | . New York | | 397,293 | (+3,438) | 31,137 | (+167) | 7.8% | . California | | 216,955 | (+25,916) | 5,937 | (+300) | 2.7% | . New Jersey | | 173,036 | (+3,302) | 14,975 | (+2,026) | 8.7% | . Texas | | 152,296 | (+27,570) | 2,407 | (+161) | 1.6% | . Illinois | | 143,117 | (+3,835) | 7,098 | (+173) | 5.0% | . Florida | | 141,067 | (+37,572) | 3,418 | (+181) | 2.4% | . Massachusetts | | 108,667 | (+1,228) | 8,060 | (+171) | 7.4% | . Pennsylvania | | 89,785 | (+2,502) | 6,655 | (+144) | 7.4% | . Arizona | | 73,961 | (+15,564) | 1,594 | (+196) | 2.2% | . Georgia | | 72,800 | (+8,223) | 2,735 | (+89) | 3.8% | . Michigan | | 70,042 | (+1,669) | 6,161 | (+48) | 8.8% | . Maryland | | 67,360 | (+1,758) | 3,168 | (+76) | 4.7% | . North Carolina | | 62,178 | (+7,354) | 1,338 | (+62) | 2.2% | . Virginia | | 61,736 | (+2,742) | 1,732 | (+87) | 2.8% | . Louisiana | | 56,349 | (+4,641) | 3,199 | (+65) | 5.7% | . Ohio | | 50,309 | (+4,182) | 2,807 | (+72) | 5.6% | . Connecticut | | 46,303 | (+404) | 4,316 | (+39) | 9.3% | . Indiana | | 46,071 | (+2,104) | 2,619 | (+50) | 5.7% | . Tennessee | | 39,945 | (+3,927) | 577 | (+42) | 1.4% | . Minnesota | | 35,584 | (+2,083) | 1,460 | (+35) | 4.1% | . Alabama | | 35,441 | (+4,344) | 919 | (+55) | 2.6% | . Washington | | 33,341 | (+2,563) | 1,311 | (+26) | 3.9% | . South Carolina | | 33,320 | (+6,707) | 716 | (+43) | 2.1% | . Colorado | | 32,290 | (+1,413) | 1,676 | (+11) | 5.2% | . Wisconsin | | 30,723 | (+2,536) | 786 | (+28) | 2.6% | . Iowa | | 28,520 | (+2,050) | 706 | (+16) | 2.5% | . Mississippi | | 25,899 | (+3,001) | 1,039 | (+50) | 4.0% | . Missouri | | 21,254 | (+2,106) | 1,023 | (+30) | 4.8% | . Utah | | 21,155 | (+2,701) | 167 | (+4) | 0.8% | . Arkansas | | 19,818 | (+3,140) | 264 | (+27) | 1.3% | . Nebraska | | 18,900 | (+808) | 271 | (+9) | 1.4% | . Nevada | | 17,187 | (+3,129) | 500 | (+8) | 2.9% | . Rhode Island | | 16,661 | (+128) | 927 | (+21) | 5.6% | . Kentucky | | 15,480 | (+1,157) | 577 | (+18) | 3.7% | . Kansas | | 14,016 | (+1,357) | 272 | (+11) | 1.9% | . Oklahoma | | 12,944 | (+1,916) | 385 | (+14) | 3.0% | . New Mexico | | 11,809 | (+971) | 492 | (+16) | 4.2% | . Delaware | | 11,226 | (+379) | 507 | (+3) | 4.5% | . District of Columbia | | 10,248 | (+154) | 550 | (+13) | 5.4% | . Oregon | | 8,348 | (+1,067) | 204 | (+12) | 2.4% | . Puerto Rico | | 7,189 | (+504) | 153 | (+4) | 2.1% | . South Dakota | | 6,681 | (+328) | 91 | (+8) | 1.4% | . New Hampshire | | 5,747 | (+176) | 367 | (+24) | 6.4% | . Idaho | | 5,350 | (+938) | 91 | (+1) | 1.7% | . North Dakota | | 3,504 | (+178) | 88 | (+4) | 2.5% | . Maine | | 3,191 | (+197) | 104 | (+2) | 3.3% | . West Virginia | | 2,832 | (+239) | 93 | (+1) | 3.3% | . Wyoming | | 1,417 | (+163) | 20 | (+0) | 1.4% | . Guam | | 1,217 | (+23) | 6 | (+0) | 0.5% | . Vermont | | 1,202 | (+38) | 56 | (+0) | 4.7% | . Alaska | | 1,060 | (+155) | 12 | (+2) | 1.1% | . Hawaii | | 883 | (+76) | 18 | (+1) | 2.0% | . Montana | | 863 | (+120) | 22 | (+1) | 2.5% | . Virgin Islands | | 81 | (+5) | 6 | (+0) | 7.4% | . Northern Mariana Islands | | 30 | (+0) | 2 | (+0) | 6.7% | . Visualizations by Pratap Vardhan1 . . Source: &quot;The New York Times&quot;. Link to notebook, orignal interactive&#8617; . |",
            "url": "https://covid19dashboards.com/covid-overview-us/",
            "relUrl": "/covid-overview-us/",
            "date": " • Mar 21, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "COVID-19 Tracking Europe Cases",
            "content": "WorldUSEurope Europe Confirmed Cases 2,405,122 (+70,569) Deaths 190,725 (+2,121) Updated on June 28, 2020 ( +change since 5 days ago.) . Italy Cases 240,310 (+1,477) Deaths 34,738 (+63) Spain Cases 248,770 (+2,018) Deaths 28,343 (+18) Germany Cases 194,693 (+2,213) Deaths 8,968 (+54) In the last 5 days, 70,569 new Coronavirus cases have been reported in the Europe. Of which 1,477 (2%) are from Italy. Spain has reported 2,018 new cases in the last 5 days. . 5 50 500 . Country New Cases Total Cases Deaths Fatality . | May. 19 Jun. 28 | | (+NEW) since Jun, 23 | | | . Russia | | 633,563 | (+34,685) | 9,060 | (+711) | 1.4% | . United Kingdom | | 312,640 | (+4,958) | 43,634 | (+623) | 14.0% | . Spain | | 248,770 | (+2,018) | 28,343 | (+18) | 11.4% | . Italy | | 240,310 | (+1,477) | 34,738 | (+63) | 14.5% | . France | | 199,476 | (+950) | 29,781 | (+58) | 14.9% | . Germany | | 194,693 | (+2,213) | 8,968 | (+54) | 4.6% | . Sweden | | 65,137 | (+4,300) | 5,280 | (+119) | 8.1% | . Belarus | | 61,475 | (+1,988) | 383 | (+26) | 0.6% | . Belgium | | 61,295 | (+485) | 9,732 | (+19) | 15.9% | . Netherlands | | 50,355 | (+425) | 6,124 | (+10) | 12.2% | . Ukraine | | 43,856 | (+4,955) | 1,142 | (+97) | 2.6% | . Portugal | | 41,646 | (+1,909) | 1,564 | (+24) | 3.8% | . Poland | | 33,907 | (+1,380) | 1,438 | (+63) | 4.2% | . Switzerland | | 31,617 | (+285) | 1,962 | (+6) | 6.2% | . Romania | | 26,313 | (+1,808) | 1,612 | (+73) | 6.1% | . Ireland | | 25,439 | (+48) | 1,735 | (+15) | 6.8% | . Austria | | 17,654 | (+246) | 702 | (+9) | 4.0% | . Moldova | | 16,250 | (+1,536) | 530 | (+40) | 3.3% | . Serbia | | 14,046 | (+954) | 270 | (+7) | 1.9% | . Denmark | | 12,875 | (+114) | 604 | (+1) | 4.7% | . Czechia | | 11,603 | (+953) | 348 | (+9) | 3.0% | . Norway | | 8,855 | (+83) | 249 | (+1) | 2.8% | . Finland | | 7,198 | (+43) | 328 | (+1) | 4.6% | . North Macedonia | | 6,080 | (+769) | 286 | (+35) | 4.7% | . Bulgaria | | 4,691 | (+577) | 219 | (+11) | 4.7% | . Luxembourg | | 4,242 | (+109) | 110 | (+0) | 2.6% | . Hungary | | 4,142 | (+35) | 581 | (+8) | 14.0% | . Bosnia and Herzegovina | | 3,935 | (+347) | 178 | (+6) | 4.5% | . Greece | | 3,376 | (+74) | 191 | (+1) | 5.7% | . Croatia | | 2,691 | (+325) | 107 | (+0) | 4.0% | . Albania | | 2,402 | (+355) | 55 | (+10) | 2.3% | . Kosovo | | 2,169 | (+0) | 37 | (+0) | 1.7% | . Estonia | | 1,987 | (+5) | 69 | (+0) | 3.5% | . Iceland | | 1,838 | (+14) | 10 | (+0) | 0.5% | . Lithuania | | 1,815 | (+12) | 78 | (+1) | 4.3% | . Slovakia | | 1,664 | (+75) | 28 | (+0) | 1.7% | . Slovenia | | 1,581 | (+47) | 111 | (+2) | 7.0% | . Latvia | | 1,116 | (+5) | 30 | (+0) | 2.7% | . Andorra | | 855 | (+0) | 52 | (+0) | 6.1% | . San Marino | | 698 | (+0) | 42 | (+0) | 6.0% | . Malta | | 670 | (+5) | 9 | (+0) | 1.3% | . Monaco | | 103 | (+2) | 4 | (+0) | 3.9% | . Liechtenstein | | 82 | (+0) | 1 | (+0) | 1.2% | . Holy See | | 12 | (+0) | 0 | (+0) | 0.0% | . Visualizations by Pratap Vardhan1 . . Source: &quot;COVID-19 Data Repository by Johns Hopkins CSSE&quot; GitHub repository. Link to notebook, orignal interactive&#8617; . |",
            "url": "https://covid19dashboards.com/covid-overview-europe/",
            "relUrl": "/covid-overview-europe/",
            "date": " • Mar 21, 2020"
        }
        
    
  
    
        ,"post10": {
            "title": "Estimating The Infected Population From Deaths",
            "content": ". Warning: This analysis contains the results of a predictive model. There are a number of assumptions made which include some speculation. Furthermore, this analysis was not prepared or reviewed by an Epidimiologist. Therefore, the assumptions and methods presented should be scrutinized carefully before arriving at any conclusions. . Estimated Infected Population By Country . with respect to days since outbreak . Tip: Click (Shift+ for multiple) on countries in the legend to filter the visualization. . Latest Country Estimates . Date Estimated Infected Lower Bound Estimates Upper Bound Estimates . Country . Brazil 2020-06-28 | 1,712,513 | 1,344,143 | 2,446,447 | . China 2020-06-28 | 84,925 | 84,757 | 121,322 | . France 2020-06-28 | 201,224 | 199,476 | 287,464 | . Germany 2020-06-28 | 198,384 | 194,693 | 283,406 | . Iran 2020-06-28 | 244,355 | 222,669 | 349,079 | . Italy 2020-06-28 | 242,119 | 240,310 | 345,885 | . Japan 2020-06-28 | 19,197 | 18,366 | 27,424 | . Portugal 2020-06-28 | 44,894 | 41,646 | 64,135 | . Singapore 2020-06-28 | 45,176 | 43,459 | 64,538 | . South Korea 2020-06-28 | 13,153 | 12,757 | 18,790 | . Spain 2020-06-28 | 252,170 | 248,770 | 360,242 | . United Kingdom 2020-06-28 | 321,412 | 312,640 | 459,159 | . United States 2020-06-28 | 2,914,834 | 2,548,996 | 4,164,048 | . Infected vs. number of confirmed cases . Allows you to compare how countries have been tracking the true number of infected people. The smaller deviation from the dashed line (45 degree line) the better job at tracking the true number of infected people. . . Tip: Click (Shift+ for multiple) on countries in the legend to filter the visualization. . Latest Observed vs. Estimate of Infected Cases . Date Observed Cases Estimated Infected . Country . Brazil 2020-06-28 | 1,344,143 | 1,712,513 | . China 2020-06-28 | 84,757 | 84,925 | . France 2020-06-28 | 199,476 | 201,224 | . Germany 2020-06-28 | 194,693 | 198,384 | . Iran 2020-06-28 | 222,669 | 244,355 | . Italy 2020-06-28 | 240,310 | 242,119 | . Japan 2020-06-28 | 18,366 | 19,197 | . Portugal 2020-06-28 | 41,646 | 44,894 | . Singapore 2020-06-28 | 43,459 | 45,176 | . South Korea 2020-06-28 | 12,757 | 13,153 | . Spain 2020-06-28 | 248,770 | 252,170 | . United Kingdom 2020-06-28 | 312,640 | 321,412 | . United States 2020-06-28 | 2,548,996 | 2,914,834 | . Methodology . We argue that the number of infected in the past can be inferred using today&#39;s number of deaths and average fatality rate from confirmed cases in the following way: . $$I_{t-j} = frac{D_t}{{CFR}_t}$$ . where $I_t$ = number of infected, $D_t$ = number of deaths, and ${CFR}_t $ = case fatality rate = $ frac{D}{C}$. The $j$ depends on the average number of days that covid patients die after having the first symptoms. . Assumption 1: The case fatality rate is a good proxy for the fatality rate of the infected population . Then, in order to estimate the current number of infected $I_t$ we need to estimate its growth rate from $t-j$ to $t$. . $$I_t = (1+ hat{g})^j I_{t-j}$$ . Assumption 2: The growth rate of infected $ hat{g}$ is an unbiased estimate of $g$ . . For now we estimate $g$ using the average growth rate since having the first infected person. . Assumption 3: It takes on average 8 days to die after having the first symptoms. . This analysis was conducted by Joao B. Duarte. Relevant sources are listed below: . 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE GitHub repository. . | Feenstra, Robert C., Robert Inklaar and Marcel P. Timmer (2015), &quot;The Next Generation of the Penn World Table&quot; American Economic Review, 105(10), 3150-3182 . |",
            "url": "https://covid19dashboards.com/covid-infected/",
            "relUrl": "/covid-infected/",
            "date": " • Mar 19, 2020"
        }
        
    
  
    
        ,"post11": {
            "title": "COVID-19 Deaths, Cases & Recovery Per Capita",
            "content": "Deaths Per Million Of Inhabitants . Since reaching at least 1 death per million . Tip: Click (Shift+ for multiple) on countries in the legend to filter the visualization. . Last Available Total Deaths By Country: . date Deaths per Million Log of Deaths per Million . Country . Austria 2020-06-28 | 80.362178 | 4.386544 | . Belgium 2020-06-28 | 851.493065 | 6.746991 | . Brazil 2020-06-28 | 275.323582 | 5.617947 | . Denmark 2020-06-28 | 105.344837 | 4.657239 | . France 2020-06-28 | 442.995946 | 6.093561 | . Germany 2020-06-28 | 109.213717 | 4.693307 | . Greece 2020-06-28 | 17.115044 | 2.839958 | . Iran 2020-06-28 | 129.468199 | 4.863435 | . Italy 2020-06-28 | 585.209867 | 6.371971 | . Japan 2020-06-28 | 7.624459 | 2.031361 | . Netherlands 2020-06-28 | 359.475358 | 5.884646 | . Norway 2020-06-28 | 46.933462 | 3.848731 | . Portugal 2020-06-28 | 151.410921 | 5.019997 | . Romania 2020-06-28 | 81.913458 | 4.405663 | . Singapore 2020-06-28 | 4.554337 | 1.516080 | . Slovenia 2020-06-28 | 53.365998 | 3.977174 | . South Korea 2020-06-28 | 5.531341 | 1.710430 | . Spain 2020-06-28 | 611.442465 | 6.415821 | . Sweden 2020-06-28 | 532.757482 | 6.278066 | . Switzerland 2020-06-28 | 231.476986 | 5.444480 | . United Kingdom 2020-06-28 | 659.307246 | 6.491190 | . United States 2020-06-28 | 387.731013 | 5.960312 | . Cases Per Million of Habitants . Since reaching at least 1 case per million . Note: The following chart, &quot;Cases Per Million of Habitants&quot; is biased depending on how widely a country administers tests. Please read with caution. . Tip: Click (Shift+ for multiple) on countries in the legend to filter the visualization. . This graph shows the 50 countries that are facing highest rate of deaths per 1000 infections, across the world. As it is not so intuitive that the developed countries such as Belgium, France, Netherlands are among the top countries having highest death rate. . Further, we move on to the countries with best recovery rate. The graph below shows 50 countries with highest rate of recovery. . Finally we project the data from above graphs on to a scatter plot. The Orange and Green bubbles are from the above two bar charts. Additionally, the bubbles in Grey color are the rest of the countries. . Appendix . Last Available Cases Per Million By Country: . date Cases per Million Log of Cases per Million . Country . Brazil 2020-06-28 | 6422.447413 | 8.767555 | . China 2020-06-28 | 60.131926 | 4.096541 | . France 2020-06-28 | 2967.229417 | 7.995384 | . Germany 2020-06-28 | 2371.002035 | 7.771068 | . Iran 2020-06-28 | 2743.486324 | 7.916985 | . Italy 2020-06-28 | 4048.355779 | 8.306066 | . Japan 2020-06-28 | 144.064628 | 4.970262 | . Portugal 2020-06-28 | 4031.751404 | 8.301956 | . Romania 2020-06-28 | 1337.089832 | 7.198251 | . Singapore 2020-06-28 | 7612.574208 | 8.937557 | . South Korea 2020-06-28 | 250.224529 | 5.522359 | . Spain 2020-06-28 | 5366.705782 | 8.587970 | . United Kingdom 2020-06-28 | 4723.972530 | 8.460405 | . United States 2020-06-28 | 7856.130626 | 8.969049 | . This analysis was conducted by Joao B. Duarte. Assitance with creating visualizations were provided by Hamel Husain. The highest Recovery and Death rates were added by Arun Gupta. Relevant sources are listed below: . &quot;2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE&quot; GitHub repository. . | Feenstra, Robert C., Robert Inklaar and Marcel P. Timmer (2015), &quot;The Next Generation of the Penn World Table&quot; American Economic Review, 105(10), 3150-3182 . |",
            "url": "https://covid19dashboards.com/covid-compare-permillion/",
            "relUrl": "/covid-compare-permillion/",
            "date": " • Mar 19, 2020"
        }
        
    
  
    
        ,"post12": {
            "title": "Compare Country Trajectories - Total Cases",
            "content": "Learning from Italy, South Korea &amp; Japan . Italy, South Korea &amp; Japan are three countries which show different growth rates and how it evolved over time. . South Korea flattened it&#39;s growth after 2 weeks since 100 cases. Italy continue to grew after 3rd week. . Where does your Country stand today? . Click (Shift+ for multiple) on Countries legend to filter the visualization. . Last Updated on June, 28 2020 Select a country from the drop down list below to toggle the visualization. . Interactive by Pratap Vardhan1 . . Source: &quot;2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE&quot; GitHub repository. Link to original notebook.&#8617; . |",
            "url": "https://covid19dashboards.com/compare-country-trajectories/",
            "relUrl": "/compare-country-trajectories/",
            "date": " • Mar 17, 2020"
        }
        
    
  
    
        ,"post13": {
            "title": "Compare Death Rate Trajectories",
            "content": "An Exception was encountered at &#39;In [18]&#39;. . Learning from Italy, South Korea, Japan . Italy, South Korea &amp; Japan are three countries which show significantly different total deaths growth rates and evolution over time. . South Korea and Japan have a lower growth rate since thier 10th death. Italy has been growing close to 33% until 3 weeks since their 10th death. . Where does your country stand today? . Click (Shift+ for multiple) on Countries legend to filter the visualization. . Last Updated on June, 28 2020 MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . Select a country from the drop down list below to toggle the visualization. . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . Learning From Lombardy, Italy . Lombardy, a region of Italy with a population of only 10 million people, has reached over 12,000 deaths due to COVID-19. At its highest daily death toll, Lombardy had 546 deaths in one day. This shows that the virus has a high mortality rate even on a small demographic scale, likely due to overwhelmed healthcare services. . Where does your country stand in comparison to Lombardy? . Click (Shift+ for multiple) on Countries legend to filter the visualization. . Execution using papermill encountered an exception here and stopped: . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 632 &#34;&#34;&#34; 633 for func in funcs: --&gt; 634 data = func(data) 635 return data 636 /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.10/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . Visualizations are created by Pratap Vardhan1 . Visualization improvements, maintenance and Lombardy comparison chart by Vlad Stan. . . Source: &quot;2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE&quot; GitHub repository. Link to original notebook.&#8617; . |",
            "url": "https://covid19dashboards.com/compare-country-death-trajectories/",
            "relUrl": "/compare-country-death-trajectories/",
            "date": " • Mar 17, 2020"
        }
        
    
  
    
        ,"post14": {
            "title": "Interactive Map - Confirmed Cases in the US by State",
            "content": "Click On State To Filter Chart Below . Prepared by Asif Imran1 . . Source: &quot;https://covidtracking.com/api/&quot;.&#8617; . |",
            "url": "https://covid19dashboards.com/growth-map-us-states/",
            "relUrl": "/growth-map-us-states/",
            "date": " • Mar 15, 2020"
        }
        
    
  
    
        ,"post15": {
            "title": "Changes In The Daily Growth Rate",
            "content": "Appendix: German ICU Capacity . Updated daily by GitHub Actions. . This visualization was made by Thomas Wiecki1. . . Data sourced from &quot;2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE&quot; GitHub repository and recreates the (pay-walled) plot in the Financial Times. This code is provided under the BSD-3 License. Link to original notebook.&#8617; . |",
            "url": "https://covid19dashboards.com/growth-analysis/",
            "relUrl": "/growth-analysis/",
            "date": " • Mar 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "About This Project . This site was built by Hamel Husain. The content on this site (analysis, visualizations, etc.) was contributed by these wonderful people. . This website is powered by fastpages, a blogging platform that natively supports Jupyter notebooks in addition to other formats.1 View this project on GitHub. . Contributing . Do you have a visualization that you would like to add? Or would you like to improve or fix an existing visualization? . Please see the Contributing Guide. . You can also get in touch if you have any questions. . Background . This project is supported by a virtual team of open source collaborators that gather data, make visualizations, and perform analysis regarding the COVID-19 epidemic. We saw that data scientists were struggling to share information with each other, so we used this project to aid in the sharing of data and information. This project aims to offer an accessible way for data professionals to share dashboards (that are updated with new data automatically) without requiring any expertise in front-end development. . . Familiarity with fastpages is helpful. All you need to do is include the appropriate front matter in your notebook. You can submit a pull request at github.com/github/covid19-dashboard. &#8617; . |",
          "url": "https://covid19dashboards.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Related",
          "content": "Related Articles &amp; Further Information . This website contains visualizations and analysis built from data sources that are updated regularly. However, there are other useful sources of information beyond these visualizations that may be helpful, which we have started to curate here: . Want to add something to this list? Edit this file on GitHub and make a pull request! . Data Sources . COVID-19 related public projects on GitHub: A comprehensive versioned dataset of the repositories and relevant related metadata about public projects hosted on GitHub related to the 2019 Novel Coronavirus and associated COVID-19 disease. | The CDC’s page on the Coronavirus. | 2019 Novel Coronavirus COVID-19 (2019-nCoV) Data Repository by Johns Hopkins CSSE: Powers many of the visualizations on this site. This data must be used with care as there are known issues. This aggregates 14+ data sources from around the world. | covidtracking.com: Provides an API for detailed data concerning the United States. Includes positive and negative results, pending tests, and total people tested for each state or district currently reporting that data. | Boston’s Children’s Hospital Health Map project. Includes this GitHub repo and this Google sheet | Official Italian government GitHub repo. Updated regularly by the Italian Ministry of Health and Dipartimento di Protezione Civile. Contains multiple indicators such as number of total cases, number in ICU, number of tests done, etc. | Folding@Home Dataset: A dataset that can assist researchers simulating potentially druggable protein targets. | Temporal variation in transmission dataset: data that can be used to identify changes in the reproduction number, rate of spread, and doubling time during the course of the COVID-19 outbreak whilst accounting for potential biases due to delays in case reporting. | New York Times Dataset: Contains state-level and county-level data based on reports from state and local health agencies. Certain geographical exceptions are present which are mentioned therewith. | Models of Infectious Disease Agent Study (MIDAS) Network has listed computable information (in CSV format) relevant for modeling of the COVID-19 outbreak. | . Articles . Why outbreaks like the coronavirus spread exponentially and how to flatten the curve Washington Post, Mar 14, 2020 | COVID-19 outbreak response: first assessment of mobility changes in Italy following lockdown Mar 13, 2020 | Open letter from Italy to the international scientific community Mar 13, 2020 | COVID-19, your community, and you — a data science perspective Mar 9, 2020 | . Projects . COVID-19 in US and Canada: This is the best information I have seen for the US. Even provides case details in some cases. Really well organized dashboard with a plethora of information. | nCoV2019.live: Dashboard that presents global statistics about COVID-19 in a tabular format. | COVID-19 Clinical Trials Dashboard: Interactive dashboard that tracks clinical trials related to COVID-19. Uses clinicaltrials.gov data and is updated using API calls. | Search Trends for Coronavirus Symptoms, by Country: Shows search trends for coronavirus symptoms in the native language of the top-50 populated countries in the world (excluding China). | Python Open Source Dashboard: Interactive COVID-19 Dashboard, built from scratch in Python on open source Plotly Dash with very few lines of code, including an animating global timeline map. Read ‘About this Dashboard’ in the Dashboard itself. It‘s open source and open for collaboration. | COVID-19 Tracker—Days since N: Shiny app that allows users to select countries and compare cumulative outcomes and growth rates on a standardized x-axis. Easy download of plots and filtered data tables in PNG and CSV formats, respectively. | Effectiveness of airport screening at detecting travellers infected with novel coronavirus COVID-19: Simulation that illustrates the impact of airport screening. | COVID-19 Online Screening Tool - screencovid.com: Assess your risk for COVID-19. | Coronavirus Diary: Coronavirus Diary is a mobile application that allows users to complete daily health checkups and receive personalized symptom assessments. If the user experiences symptoms in line with the disease, they will be prompted to contact their physician. | A collection of Open Source COVID-19 projects. Is a collection of resources on open source, data, analysis, dashboards and maps. | corona-cli: 🦠 Track the Coronavirus disease (COVID-19) or the Novel Coronavirus Strain in the command line. Both worldwide for all countries, for one country, or for the US States. Fast response time (&lt; 100ms). | Genomic Epidemiology of novel coronavirus with visual depiction of genomes sampled between Dec 2019-present. | COVID-19 World Monitor: Dashboard combining latest COVID-19 Data with critical/acute Care Capacities, Testing Data and SEIR-Simulation | .",
          "url": "https://covid19dashboards.com/related/",
          "relUrl": "/related/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

}